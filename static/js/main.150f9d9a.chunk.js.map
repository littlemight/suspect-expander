{"version":3,"sources":["components/ElementIcon.js","components/FriendItemComponent.js","components/FriendListComponent.js","components/GraphComponent.js","components/SuspectComponent.js","App.js","index.js"],"names":["elColor","elIcon","element","faWind","faTint","faFire","faMountain","icon","color","size","friend","fetchID","Fragment","ListItem","button","onClick","id","ListItemIcon","ElementIcon","ListItemText","primary","name","secondary","Divider","friends","List","component","aria-labelledby","subheader","ListSubheader","Typography","variant","align","length","map","f","FriendItemComponent","key","GraphComponent","state","config","automaticRearrangeAfterDropNode","directed","width","expandGraphNode","a","fetch","method","response","json","newSuspect","payload","newFriends","oldData","data","forEach","newNode","getColor","nodes","some","node","push","newEdge","source","target","links","edge","setState","this","onClickNode","onDoubleClickNode","props","suspect","p","Component","raw_friends","freq","sort","b","parseInt","Container","className","Box","my","Card","CardHeader","avatar","title","CardContent","FriendListComponent","theme","createMuiTheme","typography","fontFamily","App","scroll","scrollToTop","console","log","suspectComponent","status","SuspectComponent","maxWidth","display","gutterBottom","TextField","placeholder","label","type","value","error","helperText","message","onChange","e","fullWidth","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.150f9d9a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faFire,\r\n  faTint,\r\n  faWind,\r\n  faMountain,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default ({ element }) => {\r\n  let elColor = null;\r\n  let elIcon = null;\r\n  switch (element) {\r\n    case \"air\":\r\n      elColor = \"#fad672\";\r\n      elIcon = faWind;\r\n      break;\r\n    case \"water\":\r\n      elColor = \"#81d3e8\";\r\n      elIcon = faTint;\r\n      break;\r\n    case \"fire\":\r\n      elColor = \"#d46628\";\r\n      elIcon = faFire;\r\n      break;\r\n    case \"earth\":\r\n      elColor = \"#6e6d2d\";\r\n      elIcon = faMountain;\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n  return <FontAwesomeIcon icon={elIcon} color={elColor} size=\"lg\" />;\r\n};\r\n","import React from \"react\";\r\nimport {\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Divider,\r\n} from \"@material-ui/core\";\r\nimport ElementIcon from \"./ElementIcon\";\r\n\r\nexport default ({ friend, fetchID }) => {\r\n  // console.log(friend.element);\r\n  return (\r\n    <React.Fragment>\r\n      <ListItem button onClick={() => fetchID(friend.id)}>\r\n        <ListItemIcon>\r\n          <ElementIcon element={friend.element} />\r\n        </ListItemIcon>\r\n        <ListItemText\r\n          primary={friend.name}\r\n          secondary={`Suspect #${friend.id}`}\r\n        />\r\n      </ListItem>\r\n      <Divider />\r\n    </React.Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { List, ListSubheader, Typography } from \"@material-ui/core\";\r\nimport FriendItemComponent from \"./FriendItemComponent\";\r\n\r\nexport default ({ friends, fetchID }) => {\r\n  return (\r\n    <List\r\n      component=\"div\"\r\n      aria-labelledby=\"nested-list-subheader\"\r\n      subheader={\r\n        <ListSubheader component=\"div\" id=\"nested-list-subheader\">\r\n          <Typography variant=\"subtitle1\" align=\"left\">\r\n            {friends.length} {friends.length > 1 ? \"friends\" : \"friend\"} found.\r\n          </Typography>\r\n          <Typography variant=\"subtitle2\" align=\"left\">\r\n            Click a friend to search them.\r\n          </Typography>\r\n        </ListSubheader>\r\n      }\r\n    >\r\n      {friends.map((f) => {\r\n        return <FriendItemComponent friend={f} key={f.id} fetchID={fetchID} />;\r\n      })}\r\n    </List>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Graph } from \"react-d3-graph\";\r\n\r\nclass GraphComponent extends Component {\r\n  state = {\r\n    id: null,\r\n  };\r\n\r\n  static getColor(element) {\r\n    let color = \"red\";\r\n    switch (element) {\r\n      case \"air\":\r\n        color = \"#fad672\";\r\n        break;\r\n      case \"water\":\r\n        color = \"#81d3e8\";\r\n        break;\r\n      case \"fire\":\r\n        color = \"#d46628\";\r\n        break;\r\n      case \"earth\":\r\n        color = \"#6e6d2d\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return color;\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (!props.suspect.id || props.suspect.id !== state.id) {\r\n      const { suspect, friends, fetchID } = props;\r\n      return {\r\n        id: suspect.id,\r\n        data: {\r\n          nodes: [suspect, ...friends].map((p) => {\r\n            return {\r\n              id: p.id,\r\n              color: GraphComponent.getColor(p.element),\r\n            };\r\n          }),\r\n          links: friends.map((f) => {\r\n            return { source: suspect.id, target: f.id };\r\n          }),\r\n        },\r\n        fetchID: fetchID,\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  config = {\r\n    automaticRearrangeAfterDropNode: true,\r\n    directed: true,\r\n    width: 480,\r\n  };\r\n\r\n  expandGraphNode = async (id) => {\r\n    const response = await fetch(\"https://avatar.labpro.dev/friends/\" + id, {\r\n      method: \"GET\",\r\n    });\r\n    const json = await response.json();\r\n    const newSuspect = json.payload;\r\n    const newFriends = newSuspect.friends;\r\n    const oldData = { ...this.state.data };\r\n\r\n    newFriends.forEach((f) => {\r\n      const newNode = {\r\n        id: f.id,\r\n        color: GraphComponent.getColor(f.element),\r\n      };\r\n      if (!oldData.nodes.some((node) => node.id === newNode.id)) {\r\n        oldData.nodes.push(newNode);\r\n      }\r\n\r\n      const newEdge = {\r\n        source: newSuspect.id,\r\n        target: f.id,\r\n      };\r\n      if (\r\n        !oldData.links.some(\r\n          (edge) =>\r\n            edge.source === newEdge.source && edge.target === newEdge.target\r\n        )\r\n      ) {\r\n        oldData.links.push(newEdge);\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      data: oldData,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Graph\r\n        id=\"graph-id\"\r\n        data={this.state.data}\r\n        onClickNode={this.state.fetchID}\r\n        onDoubleClickNode={this.expandGraphNode}\r\n        config={this.config}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default GraphComponent;\r\n","import React from \"react\";\r\nimport FriendListComponent from \"./FriendListComponent\";\r\nimport GraphComponent from \"./GraphComponent\";\r\nimport { Box, Container } from \"@material-ui/core\";\r\nimport { Card, CardHeader, CardContent } from \"@material-ui/core\";\r\nimport ElementIcon from \"./ElementIcon\";\r\n\r\nexport default (props) => {\r\n  const { id, name, element, friends: raw_friends } = props.suspect;\r\n\r\n  const freq = {}; // handle double nodes in api response\r\n  const friends = [];\r\n  raw_friends.forEach((f) => {\r\n    if (!freq[f.id] && f.id !== id) {\r\n      freq[f.id] = 1;\r\n      friends.push(f);\r\n    }\r\n  });\r\n\r\n  friends.sort((a, b) => {\r\n    a = parseInt(a.id);\r\n    b = parseInt(b.id);\r\n    if (a < b) return -1;\r\n    if (a > b) return 1;\r\n    return 0;\r\n  });\r\n\r\n  return (\r\n    <Container className=\"SuspectComponent\">\r\n      <Box my={4}>\r\n        <Card>\r\n          <CardHeader\r\n            avatar={<ElementIcon element={element} />}\r\n            title={name}\r\n            subheader={`Suspect #${id}`}\r\n          />\r\n          <CardContent>\r\n            <GraphComponent\r\n              suspect={{ id, name, element }}\r\n              friends={friends}\r\n              fetchID={props.fetchID}\r\n            />\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n      <FriendListComponent friends={friends} fetchID={props.fetchID} />\r\n    </Container>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, TextField, Typography } from \"@material-ui/core\";\r\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport \"./App.css\";\r\nimport SuspectComponent from \"./components/SuspectComponent\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Nunito, Roboto, sans-serif\",\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n  state = {\r\n    id: null,\r\n    response: null,\r\n  };\r\n\r\n  fetchID = async (id) => {\r\n    try {\r\n      const response = await fetch(\"https://avatar.labpro.dev/friends/\" + id, {\r\n        method: \"GET\",\r\n      });\r\n      const json = await response.json();\r\n      this.setState({\r\n        id: id,\r\n        response: json,\r\n      });\r\n      scroll.scrollToTop();\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let suspectComponent = null;\r\n    if (this.state.response && this.state.response.status === 200) {\r\n      suspectComponent = (\r\n        <SuspectComponent\r\n          suspect={this.state.response.payload}\r\n          fetchID={this.fetchID}\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <Container maxWidth=\"sm\">\r\n          <Box my={4}>\r\n            <Typography\r\n              component=\"h1\"\r\n              variant=\"h4\"\r\n              display=\"block\"\r\n              align=\"center\"\r\n              gutterBottom\r\n            >\r\n              Suspect Expander\r\n            </Typography>\r\n            <TextField\r\n              id=\"standard-basic\"\r\n              placeholder=\"69\"\r\n              label=\"Search your suspect\"\r\n              type=\"number\"\r\n              value={this.state.id || \"\"}\r\n              error={\r\n                (!this.state.response || this.state.response.status !== 200) &&\r\n                this.state.id\r\n              }\r\n              helperText={\r\n                this.state.response && this.state.response.status === 200\r\n                  ? `Showing result for Suspect #${this.state.id}. Click a node to search that suspect, double click to expand it.`\r\n                  : this.state.response && this.state.id\r\n                  ? `API Message: ${this.state.response.message}`\r\n                  : \"Got anyone you suspect? Search 'em here. (IDs only, sadly.)\"\r\n              }\r\n              onChange={(e) => this.fetchID(e.target.value)}\r\n              fullWidth\r\n            />\r\n            {suspectComponent}\r\n          </Box>\r\n        </Container>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}